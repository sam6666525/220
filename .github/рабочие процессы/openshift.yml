# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# üíÅ The OpenShift Starter workflow will:
# - Checkout your repository
# - Perform a container image build
# - Push the built image to the GitHub Container Registry (GHCR)
# - Log in to your OpenShift cluster
# - Create an OpenShift app from the image and expose it to the internet

# ‚ÑπÔ∏è Configure your repository and the workflow with the following steps:
# 1. Have access to an OpenShift cluster. Refer to https://www.openshift.com/try
# 2. Create the OPENSHIFT_SERVER and OPENSHIFT_TOKEN repository secrets. Refer to:
#   - https://github.com/redhat-actions/oc-login#readme
#   - https://docs.github.com/en/actions/reference/encrypted-secrets
#   - https://cli.github.com/manual/gh_secret_set
# 3. (Optional) Edit the top-level 'env' section as marked with 'üñäÔ∏è' if the defaults are not suitable for your project.
# 4. (Optional) Edit the build-image step to build your project.
#    The default build type is by using a Dockerfile at the root of the repository,
#    but can be replaced with a different file, a source-to-image build, or a step-by-step buildah build.
# 5. Commit and push the workflow file to your default branch to trigger a workflow run.

# üëã Visit our GitHub organization at https://github.com/redhat-actions/ to see our actions and provide feedback.

name: OpenShift

env:
  # üñäÔ∏è EDIT your repository secrets to log into your OpenShift cluster and set up the context.
  # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
  # To get a permanent token, refer to https://github.com/redhat-actions/oc-login/wiki/Using-a-Service-Account-for-GitHub-Actions
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  # üñäÔ∏è EDIT to set the kube context's namespace after login. Leave blank to use your user's default namespace.
  OPENSHIFT_NAMESPACE: ""

  # üñäÔ∏è EDIT to set a name for your OpenShift app, or a default one will be generated below.
  APP_NAME: ""

  # üñäÔ∏è EDIT with the port your application should be accessible on.
  # If the container image exposes *exactly one* port, this can be left blank.
  # Refer to the 'port' input of https://github.com/redhat-actions/oc-new-app
  APP_PORT: ""

  # üñäÔ∏è EDIT to change the image registry settings.
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_REGISTRY_USER: ${{ github.actor }}
  IMAGE_REGISTRY_PASSWORD: ${{ github.token }}

  # üñäÔ∏è EDIT to specify custom tags for the container image, or default tags will be generated below.
  IMAGE_TAGS: ""

on:
  # https://docs.github.com/en/actions/reference/events-that-trigger-workflows
  workflow_dispatch:
  push:
    # Edit to the branch(es) you want to build and deploy on each push.
    branches: [ "main" ]

jobs:
  # üñäÔ∏è EDIT if you want to run vulnerability check on your project before deploying
  # the application. Please uncomment the below CRDA scan job and configure to run it in
  # your workflow. For details about CRDA action visit https://github.com/redhat-actions/crda/blob/main/README.md
  #
  # TODO: Make sure to add 'CRDA Scan' starter workflow from the 'Actions' tab.
  # For guide on adding new starter workflow visit https://docs.github.com/en/github-ae@latest/actions/using-workflows/using-starter-workflows

  crda-scan:
    uses: ./.github/workflows/crda.yml
    secrets:
      CRDA_KEY: ${{ secrets.CRDA_KEY }}
      # SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}       # Either use SNYK_TOKEN or CRDA_KEY

  openshift-ci-cd:
    # üñäÔ∏è Uncomment this if you are using CRDA scan step above
    # needs: crda-scan
    name: Build and deploy to OpenShift
    runs-on: ubuntu-20.04
    environment: production

    outputs:
      ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
      SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}

    steps:
    - name: Check for required secrets
      uses: actions/github-script@v6
      with:
        script: |
          const secrets = {
            OPENSHIFT_SERVER: `${{ secrets.OPENSHIFT_SERVER }}`,
            OPENSHIFT_TOKEN: `${{ secrets.OPENSHIFT_TOKEN }}`,
          };

          const GHCR = "ghcr.io";
          if (`${{ env.IMAGE_REGISTRY }}`.startsWith(GHCR)) {
            core.info(`Image registry is ${GHCR} - no registry password required`);
          }
          else {
            core.info("A registry password is required");
            secrets["IMAGE_REGISTRY_PASSWORD"] = `${{ secrets.IMAGE_REGISTRY_PASSWORD }}`;
          }

          const missingSecrets = Object.entries(secrets).filter(([ name, value ]) => {
            if (value.length === 0) {
              core.error(`Secret "${name}" is not set`);
              return true;
            }
            core.info(`‚úîÔ∏è Secret "${name}" is set`);
            return false;
          });

          if (missingSecrets.length > 0) {
            core.setFailed(`‚ùå At least one required secret is not set in the repository. \n` +
              "You can add it using:\n" +
              "GitHub UI: https://docs.github.com/en/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository \n" +
              "GitHub CLI: https://cli.github.com/manual/gh_secret_set \n" +
              "Also, refer to https://github.com/redhat-actions/oc-login#getting-started-with-the-action-or-see-example");
          }
          else {
            core.info(`‚úÖ All the required secrets are set`);
          }

    - name: Check out repository
      uses: actions/checkout@v3

    - name: Determine app name
      if: env.APP_NAME == ''
      run: |
        echo "APP_NAME=$(basename $PWD)" | tee -a $GITHUB_ENV

    - name: Determine image tags
      if: env.IMAGE_TAGS == ''
      run: |
        echo "IMAGE_TAGS=latest ${GITHUB_SHA::12}" | tee -a $GITHUB_ENV

    # https://github.com/redhat-actions/buildah-build#readme
    - name: Build from Dockerfile
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.APP_NAME }}
        tags: ${{ env.IMAGE_TAGS }}

        # If you don't have a Dockerfile/Containerfile, refer to https://github.com/redhat-actions/buildah-build#scratch-build-inputs
        # Or, perform a source-to-image build using https://github.com/redhat-actions/s2i-build
        # Otherwise, point this to your Dockerfile/Containerfile relative to the repository root.
        dockerfiles: |
          ./Dockerfile

    # https://github.com/redhat-actions/push-to-registry#readme
    - name: Push to registry
      id: push-image
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ env.IMAGE_REGISTRY_USER }}
        password: ${{ env.IMAGE_REGISTRY_PASSWORD }}

    # The path the image was pushed to is now stored in ${{ steps.push-image.outputs.registry-path }}

    - name: Install oc
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: 4

    # https://github.com/redhat-actions/oc-login#readme
    - name: Log in to OpenShift
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
        openshift_token: ${{ env.OPENSHIFT_TOKEN }}
        insecure_skip_tls_verify: true
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}

    # This step should create a deployment, service, and route to run your app and expose it to the internet.
    # https://github.com/redhat-actions/oc-new-app#readme
    - name: Create and expose app
      id: deploy-and-expose
      uses: redhat-actions/oc-new-app@v1
      with:
        app_name: ${{ env.APP_NAME }}
        image: ${{ steps.push-image.outputs.registry-path }}
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}
        port: ${{ env.APP_PORT }}

    - name: Print application URL
      env:
        ROUTE: ${{ steps.deploy-and-expose.outputs.route }}
        SELECTOR: ${{ steps.deploy-and-expose.outputs.selector }}
      run: |
        [[ -n ${{ env.ROUTE }} ]] || (echo "Determining application route failed in previous step"; exit 1)
        echo
        echo "======================== Your application is available at: ========================"
        echo ${{ env.ROUTE }}
        echo "==================================================================================="
        echo
        echo "Your app can be taken down with: \"oc delete all --selector='${{ env.SELECTOR }}'\""
- –∏–º—è:
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫—ç—à–∞: actions/cache@v3.0.8
 —Å:
 # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤, –∫–∞—Ç–∞–ª–æ–≥–æ–≤ –∏ —à–∞–±–ª–æ–Ω–æ–≤ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤ –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
–ø—É—Ç–∏: 
 # –Ø–≤–Ω—ã–π –∫–ª—é—á –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—ç—à–∞
 –ö–ª–∞–≤–∏—à–∞: 
 # –£–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —É—Å—Ç–∞—Ä–µ–≤—à–µ–≥–æ –∫—ç—à–∞, –µ—Å–ª–∏ –¥–ª—è –∫–ª—é—á–∞ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è –≤ –∫—ç—à. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ `cache-hit` –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false.
 –∫–ª—é—á–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –†–∞–∑–º–µ—Ä –±–ª–æ–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏, –≤ –±–∞–π—Ç–∞—Ö
—Ä–∞–∑–º–µ—Ä –±–ª–æ–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
- –∏–º—è: –ù–∞—Å—Ç—Ä–æ–π–∫–∞
Node.js –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–µ: actions/setup-node@v3.4.1
—Å:
 # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ always-auth –≤ npmrc.
 always-auth: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–Ω–æ false
 # –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –≤–µ—Ä—Å–∏–∏. –ü—Ä–∏–º–µ—Ä—ã: 12.x, 10.15.1, >=10.15.0.
 –≤–µ—Ä—Å–∏—è —É–∑–ª–∞: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –§–∞–π–ª, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é –≤–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –≤–µ—Ä—Å–∏–∏. –ü—Ä–∏–º–µ—Ä—ã: .nvmrc, .node-version, .tool-versions.
 —É–∑–µ–ª-–≤–µ—Ä—Å–∏—è-—Ñ–∞–π–ª: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –¶–µ–ª–µ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É–∑–ª–∞. –ü—Ä–∏–º–µ—Ä—ã: x86, x64. –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
 –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–≤–µ—Ä—è–ª–æ –Ω–∞–ª–∏—á–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–µ–π —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤–µ—Ä—Å–∏–∏.
 –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–µ—Å—Ç—Ä –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç —Ä–µ–µ—Å—Ç—Ä –Ω–∞ —É—Ä–æ–≤–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ .npmrc –∏ .—Ñ–∞–π–ª yarnrc –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ auth –¥–ª—è —á—Ç–µ–Ω–∏—è –∏–∑ env.NODE_AUTH_TOKEN.
 url-–∞–¥—Ä–µ—Å —Ä–µ–µ—Å—Ç—Ä–∞: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–∞—Ö —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç—å—é –¥–µ–π—Å—Ç–≤–∏—è. –ë—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω –≤–ª–∞–¥–µ–ª—å—Ü—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Ä–µ–µ—Å—Ç—Ä–∞ –ø–∞–∫–µ—Ç–æ–≤ GitHub (https://npm.pkg.github.com /).
 –æ–±–ª–∞—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–æ–≤ —É–∑–ª–æ–≤ –∏–∑ –≤–µ—Ä—Å–∏–π —É–∑–ª–æ–≤. –ü–æ—Å–∫–æ–ª—å–∫—É —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –æ–Ω–æ –æ–±—ã—á–Ω–æ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
 —Ç–æ–∫–µ–Ω: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ${{ github.token }}
 # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: npm, yarn, pnpm.
 –∫—ç—à: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: package-lock.json, yarn.lock –∏ —Ç.–¥. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–µ –∑–Ω–∞–∫–∏ –∏–ª–∏ —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.
 –ø—É—Ç—å –∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫—ç—à–∞: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 - –∏–º—è: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ä–µ–¥—ã Setup Go
: actions/setup-go@v3.3.0
—Å:
 # –í–µ—Ä—Å–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏) –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –¥–∏–∞–ø–∞–∑–æ–Ω—ã semver.
 –≤–µ—Ä—Å–∏—è –¥–ª—è go: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É go.mod.
 –ø–µ—Ä–µ–π—Ç–∏ –∫ –≤–µ—Ä—Å–∏–∏ —Ñ–∞–π–ª–∞: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥–ª—è —ç—Ç–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∑–Ω–∞—á–µ–Ω–∏–µ true, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –¥–µ–π—Å—Ç–≤–∏–µ –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–ª–æ –Ω–∞–ª–∏—á–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–µ–π —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤–µ—Ä—Å–∏–∏
–ø—Ä–æ–≤–µ—Ä–∫–∞-–ø–æ—Å–ª–µ–¥–Ω—è—è: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–æ–≤ —É–∑–ª–æ–≤ –∏–∑ –≥–æ—Ç–æ–≤—ã—Ö –≤–µ—Ä—Å–∏–π. –ü–æ—Å–∫–æ–ª—å–∫—É —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –æ–Ω–æ –æ–±—ã—á–Ω–æ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
 —Ç–æ–∫–µ–Ω: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ${{ github.token }}
 # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è —Ç–æ–≥–æ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ true, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∫–ª—é—á–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ.
 –∫—ç—à: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - go.sum
cache-dependency-path: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –¶–µ–ª–µ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é. –ü—Ä–∏–º–µ—Ä—ã: x86, x64. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–∏—Å—Ç–µ–º–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞.
 –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 - –∏–º—è: –ù–∞—Å—Ç—Ä–æ–π–∫–∞
Node.js –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–µ: actions/setup-node@v3.4.1
—Å:
 # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ npmrc.
 –≤—Å–µ–≥–¥–∞-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–Ω–∞—á–µ–Ω–∏–µ false
 # –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –≤–µ—Ä—Å–∏–∏. –ü—Ä–∏–º–µ—Ä—ã: 12.x, 10.15.1, >=10.15.0.
 –≤–µ—Ä—Å–∏—è —É–∑–ª–∞: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –§–∞–π–ª, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –≤–µ—Ä—Å–∏–∏. –ü—Ä–∏–º–µ—Ä—ã: .nvmrc, .node-version, .tool-versions.
 —É–∑–µ–ª-–≤–µ—Ä—Å–∏—è-—Ñ–∞–π–ª: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –¶–µ–ª–µ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ —É–∑–ª–∞. –ü—Ä–∏–º–µ—Ä—ã: x86, x64. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–∏—Å—Ç–µ–º–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞.
 –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–≤–µ—Ä—è–ª–æ –Ω–∞–ª–∏—á–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–µ–π —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤–µ—Ä—Å–∏–∏.
 –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —Ä–µ–µ—Å—Ç—Ä –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç —Ä–µ–µ—Å—Ç—Ä –Ω–∞ —É—Ä–æ–≤–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ .npmrc –∏ .—Ñ–∞–π–ª yarnrc –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ auth –¥–ª—è —á—Ç–µ–Ω–∏—è –∏–∑ env.NODE_AUTH_TOKEN.
 url-–∞–¥—Ä–µ—Å —Ä–µ–µ—Å—Ç—Ä–∞: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–µ—Å—Ç—Ä–∞—Ö —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç—å—é. –ë—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω –≤–ª–∞–¥–µ–ª—å—Ü—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Ä–µ–µ—Å—Ç—Ä–∞ –ø–∞–∫–µ—Ç–æ–≤ GitHub (https://npm.pkg.github.com /).
 –æ–±–ª–∞—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–æ–≤ —É–∑–ª–æ–≤ –∏–∑ –≤–µ—Ä—Å–∏–π —É–∑–ª–æ–≤. –ü–æ—Å–∫–æ–ª—å–∫—É —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –æ–Ω–æ –æ–±—ã—á–Ω–æ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
 —Ç–æ–∫–µ–Ω: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ${{ github.token }}
 # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: npm, yarn, pnpm.
 –∫—ç—à: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: package-lock.json, yarn.lock –∏ —Ç.–¥. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–µ –∑–Ω–∞–∫–∏ –∏–ª–∏ —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.
 –ø—É—Ç—å –∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫—ç—à–∞: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 - –∏–º—è: –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ —Å–±–æ—Ä–∫–∏
–∏—Å–ø–æ–ª—å–∑—É–µ—Ç: actions/download-artifact@v3.0.0
 —Å:
 #
–ò–º—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ –∏–º—è: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 #
–ü—É—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –ø—É—Ç—å: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
- –∏–º—è: Setup .NET Core SDK
 –∏—Å–ø–æ–ª—å–∑—É–µ—Ç: actions/setup-dotnet@v2.1.0
—Å:
 # –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ SDK –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è. –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ, –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è .json, –∫–æ–≥–¥–∞ –æ–Ω–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞. –ü—Ä–∏–º–µ—Ä—ã: 2.2.104, 3.1, 3.1.x
dotnet-–≤–µ—Ä—Å–∏—è: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ global.json, –µ—Å–ª–∏ –≤–∞—à global.json –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.
 –≥–ª–æ–±–∞–ª—å–Ω—ã–π-json-—Ñ–∞–π–ª: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –ø–∞–∫–µ—Ç–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é. –ü—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ—Ç—Å—è —Å –ª—é–±—ã–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —Ñ–∞–π–ª–æ–º NuGet.config –≤ –∫–æ—Ä–Ω–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª NuGet.config, –∏—Å–ø–æ–ª—å–∑—É—è –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å—Ä–µ–¥—ã NUGET_AUTH_TOKEN –≤ –∫–∞—á–µ—Å—Ç–≤–µ
–∏—Å—Ö–æ–¥–Ω–æ–≥–æ URL-–∞–¥—Ä–µ—Å–∞ ClearTextPassword: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –í–õ–ê–î–ï–õ–ï–¶ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–∫–µ—Ç–æ–≤ –∏–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π / –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–µ–µ—Å—Ç—Ä–∞ –ø–∞–∫–µ—Ç–æ–≤ GitHub, –æ—Ç–ª–∏—á–Ω—ã—Ö –æ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ URL-–∞–¥—Ä–µ—Å –≥–µ–æ—Ä–∞–¥–∞—Ä–∞ —Ç–∞–∫–∂–µ —É–∫–∞–∑–∞–Ω –≤ –∏—Å—Ç–æ—á–Ω–∏–∫–µ-
–≤–ª–∞–¥–µ–ª–µ—Ü URL: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ NuGet.config, –µ—Å–ª–∏ –≤–∞—à NuGet.config –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.
 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
 # –°–ª–µ–¥—É–µ—Ç –ª–∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ —Å –Ω–µ—Ç–æ—á–Ω—ã–º–∏ –≤–µ—Ä—Å–∏—è–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 5.0.0-preview.6 —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —Å 5, 5.0, 5.x –∏–ª–∏ 5.0.x). –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ false, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ —É–∫–∞–∑–∞–Ω–æ.
 –≤–∫–ª—é—á–∏—Ç—å-–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã–ø—É—Å–∫: # –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
